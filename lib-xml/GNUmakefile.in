# Makefile for the libzeep-xml library
#
# Copyright Maarten L. Hekkelman, UMC St. Radboud 2008-2013.
#        Copyright Maarten L. Hekkelman, 2014-2019
# Distributed under the Boost Software License, Version 1.0.
#    (See accompanying file LICENSE_1_0.txt or copy at
#          http://www.boost.org/LICENSE_1_0.txt)

.PHONY: firstTarget
firstTarget: lib

CXX					= @CXX@
CXXFLAGS			= @CXXFLAGS@ @BOOST_CPPFLAGS@
LDFLAGS				= @LDFLAGS@ @LIBS@ @BOOST_LDFLAGS@
LIBS				= @LIBS@

prefix				= @prefix@
exec_prefix			= @exec_prefix@
libdir				= @libdir@
includedir			= @includedir@
pkgconfigdir		= $(libdir)/pkgconfig

LIB_NAME			= @PACKAGE_NAME@-xml
LIB_VERSION			= @LZ_LT_VERSION@
LIB_TARGET			= ../lib/$(LIB_NAME).la
STAGE_DIR			= @abs_top_builddir@/lib

ifneq "$(CHECK_CONFIG)" ""

GNUmakefile: ../config.status GNUmakefile.in
	cd ..; $(SHELL) ./config.status

../config.status: ../configure
	cd ..; $(SHELL) ./config.status --recheck

../configure: ../configure.ac
	cd ..; autoconf

endif

$(LIB_NAME).pc: $(LIB_NAME).pc.in GNUmakefile
	cd ..; $(SHELL) ./config.status lib-xml/$(LIB_NAME).pc

# libtool stuff

LIBTOOL = $(SHELL) @abs_top_builddir@/libtool
CXXCOMPILE = $(LIBTOOL) --silent --tag=CXX --mode=compile $(CXX) $(CXXFLAGS)
CXXLINK = $(LIBTOOL) --silent --tag=CXX --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS) -version-info $(LIB_VERSION) -o $@
LT_EXEC = $(LIBTOOL) --silent --mode=execute

# main build variables
CXXFLAGS            += -I. -I ../include/
WARNINGS            += all no-multichar

# Use the DEBUG flag to build debug versions of the code
DEBUG               = @DEBUG@

ifeq "$(DEBUG)" "1"
DEFINES				+= DEBUG
CXXFLAGS            += -g -O0
LDFLAGS				+= -g
else
CXXFLAGS			+= -O3
DEFINES				+= NDEBUG
endif

# targets

VPATH += src:test

CXXFLAGS			+= $(DEFINES:%=-D%)
CXXFLAGS			+= $(WARNINGS:%=-W%)

OBJDIR = obj
ifeq "$(DEBUG)" "1"
	OBJDIR	:= $(OBJDIR).dbg
endif

$(OBJDIR):
	mkdir -p $(OBJDIR)

OBJECTS = \
	$(OBJDIR)/character-classification.lo \
	$(OBJDIR)/doctype.lo \
	$(OBJDIR)/document.lo \
	$(OBJDIR)/node.lo \
	$(OBJDIR)/parser.lo \
	$(OBJDIR)/xpath.lo

$(LIB_TARGET): $(OBJECTS)
	cd ..; $(CXXLINK) -rpath $(libdir) $(OBJECTS:%=lib-xml/%) $(LIBS)
	# $(CXXLINK) -rpath $(libdir) $(OBJECTS) $(LIBS)
	# $(LIBTOOL) --mode=install cp $@ $(STAGE_DIR)

.PHONY: lib
lib: $(LIB_TARGET) $(LIB_NAME).pc

-include $(OBJECTS:%.lo=%.d)

$(OBJDIR)/%.lo: %.cpp | $(OBJDIR)
	@ echo ">>" $<
	@ $(CXXCOMPILE) -MT $@ -MD -MP -MF $(OBJDIR)/$*.d -c -o $@ $<

$(OBJDIR)/%.o: %.cpp | $(OBJDIR)
	@ echo ">>" $<
	@ $(CXX) $(CXXFLAGS) -MT $@ -MD -MP -MF $(OBJDIR)/$*.d -c -o $@ $<

.PHONY: clean
clean:
	rm -rf $(OBJDIR)/* $(LIB_TARGET) .libs ../lib/$(LIB_NAME)* $(LIB_NAME).pc

QUESTIONABLE_XML_TEST_IDS = \
	ibm-valid-P28-ibm28v02.xml \
	ibm-valid-P29-ibm29v01.xml \
	ibm-valid-P29-ibm29v02.xml \
	ibm-1-1-valid-P03-ibm03v09.xml \
	rmt-e2e-34 \
	rmt-e2e-55 \
	rmt-054 \
	rmt-ns10-006 \
	rmt-e3e-13

parser_PARAMS = XML-Test-Suite/xmlconf/xmlconf.xml $(QUESTIONABLE_XML_TEST_IDS:%=--questionable=%) --print-ids
xpath_PARAMS = XPath-Test-Suite/xpath-tests.xml

ZEEP_LIBS = xml
BOOST_LIBS = program_options

define TEST_template =

-include $$(OBJDIR)/$(1)-test.d

$(1)_OBJECTS = $$(OBJDIR)/$(1)-test.o

test/$(1)-test: lib $$($(1)_OBJECTS)
	@ echo ">>> building $(1)-test"
	@ $(CXX) -o $$@ $$($(1)_OBJECTS) $$(CFLAGS) $$(CXXFLAGS) $(LDFLAGS) -L../lib $(ZEEP_LIBS:%=-lzeep-%) $(BOOST_LIBS:%=-lboost_%) $(LIBS)

.PHONY: $(1)-test
$(1)-test: test/$(1)-test
	cd test; LD_LIBRARY_PATH=../.libs ./$(1)-test $$($(1)_PARAMS)

endef

test/XML-Test-Suite/xmlconf/xmlconf.xml: test/XML-Test-Suite.tbz
	cd test; tar xf XML-Test-Suite.tbz

parser-test: test/XML-Test-Suite/xmlconf/xmlconf.xml

TESTS = unit parser serializer xpath
$(foreach part,$(TESTS),$(eval $(call TEST_template,$(part))))

.PHONY: test
test: $(TESTS:%=%-test)

FORCE:
