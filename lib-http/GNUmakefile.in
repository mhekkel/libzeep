# Makefile for the libzeep-http library
#
# Copyright Maarten L. Hekkelman, UMC St. Radboud 2008-2013.
#        Copyright Maarten L. Hekkelman, 2014-2019
# Distributed under the Boost Software License, Version 1.0.
#    (See accompanying file LICENSE_1_0.txt or copy at
#          http://www.boost.org/LICENSE_1_0.txt)

.PHONY: firstTarget
firstTarget: lib

CXX					= @CXX@
CXXFLAGS			= @CXXFLAGS@ @BOOST_CPPFLAGS@
LDFLAGS				= @LDFLAGS@ @LIBS@ @BOOST_LDFLAGS@
LIBS				= @LIBS@

prefix				= @prefix@
exec_prefix			= @exec_prefix@
libdir				= @libdir@
includedir			= @includedir@
pkgconfigdir		= $(libdir)/pkgconfig

LIB_NAME			= @PACKAGE_NAME@-http
LIB_VERSION			= @LZ_LT_VERSION@
LIB_TARGET			= ../lib/$(LIB_NAME).la
STAGE_DIR			= @abs_top_builddir@/lib

ifneq "$(CHECK_CONFIG)" ""

GNUmakefile: ../config.status GNUmakefile.in
	cd ..; $(SHELL) ./config.status

../config.status: ../configure
	cd ..; $(SHELL) ./config.status --recheck

../configure: ../configure.ac
	cd ..; autoconf

endif

$(LIB_NAME).pc: $(LIB_NAME).pc.in GNUmakefile
	cd ..; $(SHELL) ./config.status lib-http/$(LIB_NAME).pc

# libtool stuff

LIBTOOL = $(SHELL) @abs_top_builddir@/libtool
CXXCOMPILE = $(LIBTOOL) --silent --tag=CXX --mode=compile $(CXX) $(CXXFLAGS)
CXXLINK = $(LIBTOOL) --silent --tag=CXX --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS) -version-info $(LIB_VERSION) -o $@

# main build variables
CXXFLAGS            += -I. -I ../include/
WARNINGS            += all no-multichar

# Use the DEBUG flag to build debug versions of the code
DEBUG               = @DEBUG@

# resource support?
MRC					= @MRC@
ifneq "x$(MRC)" "x"
USE_RSRC			= 1
DEFINES				+= USE_RSRC WEBAPP_USES_RESOURCES
else
USE_RSRC			= 0
endif

ifeq "$(DEBUG)" "1"
DEFINES				+= DEBUG
CXXFLAGS            += -g -O0
LDFLAGS				+= -g
else
CXXFLAGS			+= -O3
DEFINES				+= NDEBUG
endif

# targets

VPATH += src:test

CXXFLAGS			+= $(DEFINES:%=-D%)
CXXFLAGS			+= $(WARNINGS:%=-W%)

OBJDIR = obj
ifeq "$(DEBUG)" "1"
	OBJDIR	:= $(OBJDIR).dbg
endif

$(OBJDIR):
	mkdir -p $(OBJDIR)

OBJECTS = \
	$(OBJDIR)/connection.lo \
	$(OBJDIR)/controller.lo \
	$(OBJDIR)/crypto.lo \
	$(OBJDIR)/daemon.lo \
	$(OBJDIR)/el-processing.lo \
	$(OBJDIR)/error-handler.lo \
	$(OBJDIR)/format.lo \
	$(OBJDIR)/glob.lo \
	$(OBJDIR)/html-controller.lo \
	$(OBJDIR)/login-controller.lo \
	$(OBJDIR)/message-parser.lo \
	$(OBJDIR)/preforked-server.lo \
	$(OBJDIR)/reply.lo \
	$(OBJDIR)/request.lo \
	$(OBJDIR)/rest-controller.lo \
	$(OBJDIR)/security.lo \
	$(OBJDIR)/server.lo \
	$(OBJDIR)/soap-controller.lo \
	$(OBJDIR)/tag-processor-v2.lo \
	$(OBJDIR)/tag-processor.lo \
	$(OBJDIR)/template-processor.lo

ifneq ($(USE_RSRC),0)
OBJECTS += \
	$(OBJDIR)/controller-rsrc.lo

$(OBJDIR)/controller-rsrc.lo: src/mrsrc.h

src/mrsrc.h:
	$(MRC) --header > $@

endif

$(LIB_TARGET): $(OBJECTS)
	cd ..; $(CXXLINK) -rpath $(libdir) $(OBJECTS:%=lib-http/%) -lzeep-xml -lzeep-json $(LIBS)
	# $(LIBTOOL) --mode=install cp $@ $(STAGE_DIR)

.PHONY: lib
lib: $(LIB_TARGET) $(LIB_NAME).pc

-include $(OBJECTS:%.lo=%.d)

$(OBJDIR)/%.lo: %.cpp | $(OBJDIR)
	@ echo ">>" $<
	@ $(CXXCOMPILE) -MT $@ -MD -MP -MF $(OBJDIR)/$*.d -c -o $@ $<

$(OBJDIR)/%.o: %.cpp | $(OBJDIR)
	@ echo ">>" $<
	@ $(CXX) $(CXXFLAGS) -MT $@ -MD -MP -MF $(OBJDIR)/$*.d -c -o $@ $<

.PHONY: clean
clean:
	rm -rf $(OBJDIR)/* $(LIB_TARGET) .libs ../lib/$(LIB_NAME)* $(LIB_NAME).pc

$(OBJDIR)/test_rsrc.o: test/fragment-file.xhtml src/mrsrc.h
	$(MRC) -o $@ $<

http_PARAMS = 
webapp_PARAMS = 

ZEEP_LIBS = http xml json
BOOST_LIBS = system

define TEST_template =

-include $$(OBJDIR)/$(1)-test.d

$(1)_OBJECTS = $$(OBJDIR)/client-test-code.o $$(OBJDIR)/$(1)-test.o

ifneq ($(USE_RSRC),0)
$(1)_OBJECTS += $$(OBJDIR)/test_rsrc.o
endif

test/$(1)-test: lib $$($(1)_OBJECTS)
	@ echo ">>> building $(1)-test"
	@ $(CXX) -o $$@ $$($(1)_OBJECTS) $$(CFLAGS) $$(CXXFLAGS) $(LDFLAGS) -L../lib $(ZEEP_LIBS:%=-lzeep-%) $(BOOST_LIBS:%=-lboost_%) $(LIBS)

.PHONY: $(1)-test
$(1)-test: test/$(1)-test
	cd test; LD_LIBRARY_PATH=$(STAGE_DIR) ./$(1)-test $$($(1)_PARAMS)

endef

TESTS = crypto http processor webapp soap rest

ifneq ($(USE_RSRC),0)
TESTS += rsrc_webapp
endif

$(foreach part,$(TESTS),$(eval $(call TEST_template,$(part))))

.PHONY: test
test: $(TESTS:%=%-test)

FORCE:
